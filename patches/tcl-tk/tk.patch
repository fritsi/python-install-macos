From 960b657e7a732d7067ff4dc8f8b7d5d9aa01f6c6 Mon Sep 17 00:00:00 2001
From: Daniel Fritsi <ffddani@gmail.com>
Date: Sat, 19 Aug 2023 18:26:25 +0200
Subject: [PATCH] Fix arm64e related compilation issue and fix
 ttk::ThemeChanged errors

---
 generic/tkInt.h        |  3 ++-
 generic/tkWindow.c     |  1 +
 generic/ttk/ttkTheme.c | 30 ++++++++++++++++++++----------
 unix/configure         | 22 +++++++++++-----------
 unix/tcl.m4            | 14 +++++++-------
 5 files changed, 41 insertions(+), 29 deletions(-)

diff --git a/generic/tkInt.h b/generic/tkInt.h
index 35b7e6738..7568585fa 100644
--- a/generic/tkInt.h
+++ b/generic/tkInt.h
@@ -1092,10 +1092,11 @@ extern "C" {
 #endif
 
 /*
- * Themed widget set init function:
+ * Themed widget set init function, and handler called when Tk is destroyed.
  */
 
 MODULE_SCOPE int	Ttk_Init(Tcl_Interp *interp);
+MODULE_SCOPE void	Ttk_TkDestroyedHandler(Tcl_Interp *interp);
 
 /*
  * Internal functions shared among Tk modules but not exported to the outside
diff --git a/generic/tkWindow.c b/generic/tkWindow.c
index fa2555354..59c12433d 100644
--- a/generic/tkWindow.c
+++ b/generic/tkWindow.c
@@ -1621,6 +1621,7 @@ Tk_DestroyWindow(
 	    TkFontPkgFree(winPtr->mainPtr);
 	    TkFocusFree(winPtr->mainPtr);
 	    TkStylePkgFree(winPtr->mainPtr);
+	    Ttk_TkDestroyedHandler(winPtr->mainPtr->interp);
 
 	    /*
 	     * When embedding Tk into other applications, make sure that all
diff --git a/generic/ttk/ttkTheme.c b/generic/ttk/ttkTheme.c
index 711c4107f..3cea404e4 100644
--- a/generic/ttk/ttkTheme.c
+++ b/generic/ttk/ttkTheme.c
@@ -403,8 +403,6 @@ typedef struct
     int themeChangePending;		/* scheduled ThemeChangedProc call? */
 } StylePackageData;
 
-static void ThemeChangedProc(void *);	/* Forward */
-
 /* Ttk_StylePkgFree --
  *	Cleanup procedure for StylePackageData.
  */
@@ -417,13 +415,6 @@ static void Ttk_StylePkgFree(
     Tcl_HashEntry *entryPtr;
     Cleanup *cleanup;
 
-    /*
-     * Cancel any pending ThemeChanged calls:
-     */
-    if (pkgPtr->themeChangePending) {
-	Tcl_CancelIdleCall(ThemeChangedProc, pkgPtr);
-    }
-
     /*
      * Free themes.
      */
@@ -486,7 +477,7 @@ static StylePackageData *GetStylePackageData(Tcl_Interp *interp)
 void Ttk_RegisterCleanup(
     Tcl_Interp *interp, ClientData clientData, Ttk_CleanupProc *cleanupProc)
 {
-    StylePackageData *pkgPtr = (StylePackageData *)GetStylePackageData(interp);
+    StylePackageData *pkgPtr = GetStylePackageData(interp);
     Cleanup *cleanup = (Cleanup *)ckalloc(sizeof(*cleanup));
 
     cleanup->clientData = clientData;
@@ -531,6 +522,25 @@ static void ThemeChanged(StylePackageData *pkgPtr)
     }
 }
 
+/* Ttk_TkDestroyedHandler --
+ *	See bug [310c74ecf440]: idle calls to ThemeChangedProc()
+ *	need to be canceled when Tk is destroyed, since the interp
+ *	may still be active afterward; canceling them from
+ *	Ttk_StylePkgFree() would be too late.
+ */
+void Ttk_TkDestroyedHandler(
+    Tcl_Interp* interp)
+{
+    StylePackageData* pkgPtr = GetStylePackageData(interp);
+
+    /*
+     * Cancel any pending ThemeChanged calls:
+     */
+    if (pkgPtr->themeChangePending) {
+	Tcl_CancelIdleCall(ThemeChangedProc, pkgPtr);
+    }
+}
+
 /*
  * Ttk_CreateTheme --
  *	Create a new theme and register it in the global theme table.
diff --git a/unix/configure b/unix/configure
index a9ad15082..8dc2272f0 100755
--- a/unix/configure
+++ b/unix/configure
@@ -5566,14 +5566,14 @@ echo "${ECHO_T}$tcl_cv_cc_arch_x86_64" >&6
 fi
 ;;
 		    arm64|arm64e)
-			echo "$as_me:$LINENO: checking if compiler accepts -arch arm64e flag" >&5
-echo $ECHO_N "checking if compiler accepts -arch arm64e flag... $ECHO_C" >&6
-if test "${tcl_cv_cc_arch_arm64e+set}" = set; then
+			echo "$as_me:$LINENO: checking if compiler accepts -arch arm64 flag" >&5
+echo $ECHO_N "checking if compiler accepts -arch arm64 flag... $ECHO_C" >&6
+if test "${tcl_cv_cc_arch_arm64+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
 
 			    hold_cflags=$CFLAGS
-			    CFLAGS="$CFLAGS -arch arm64e"
+			    CFLAGS="$CFLAGS -arch arm64"
 			    cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
@@ -5611,22 +5611,22 @@ if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; }; then
-  tcl_cv_cc_arch_arm64e=yes
+  tcl_cv_cc_arch_arm64=yes
 else
   echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
-tcl_cv_cc_arch_arm64e=no
+tcl_cv_cc_arch_arm64=no
 fi
 rm -f conftest.err conftest.$ac_objext \
       conftest$ac_exeext conftest.$ac_ext
 			    CFLAGS=$hold_cflags
 fi
-echo "$as_me:$LINENO: result: $tcl_cv_cc_arch_arm64e" >&5
-echo "${ECHO_T}$tcl_cv_cc_arch_arm64e" >&6
-			if test $tcl_cv_cc_arch_arm64e = yes; then
+echo "$as_me:$LINENO: result: $tcl_cv_cc_arch_arm64" >&5
+echo "${ECHO_T}$tcl_cv_cc_arch_arm64" >&6
+			if test $tcl_cv_cc_arch_arm64 = yes; then
 
-			    CFLAGS="$CFLAGS -arch arm64e"
+			    CFLAGS="$CFLAGS -arch arm64"
 			    do64bit_ok=yes
 
 fi
@@ -5639,7 +5639,7 @@ echo "$as_me: WARNING: Don't know how enable 64-bit on architecture \`arch\`" >&
 else
 
 		# Check for combined 32-bit and 64-bit fat build
-		if echo "$CFLAGS " |grep -E -q -- '-arch (ppc64|x86_64|arm64e) ' \
+		if echo "$CFLAGS " |grep -E -q -- '-arch (ppc64|x86_64|arm64) ' \
 		    && echo "$CFLAGS " |grep -E -q -- '-arch (ppc|i386) '; then
 
 		    fat_32_64=yes
diff --git a/unix/tcl.m4 b/unix/tcl.m4
index ca94abd4a..2f0f2c32b 100644
--- a/unix/tcl.m4
+++ b/unix/tcl.m4
@@ -1542,15 +1542,15 @@ AC_DEFUN([SC_CONFIG_CFLAGS], [
 			    do64bit_ok=yes
 			]);;
 		    arm64|arm64e)
-			AC_CACHE_CHECK([if compiler accepts -arch arm64e flag],
-				tcl_cv_cc_arch_arm64e, [
+			AC_CACHE_CHECK([if compiler accepts -arch arm64 flag],
+				tcl_cv_cc_arch_arm64, [
 			    hold_cflags=$CFLAGS
-			    CFLAGS="$CFLAGS -arch arm64e"
+			    CFLAGS="$CFLAGS -arch arm64"
 			    AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[]])],
-				    [tcl_cv_cc_arch_arm64e=yes],[tcl_cv_cc_arch_arm64e=no])
+				    [tcl_cv_cc_arch_arm64=yes],[tcl_cv_cc_arch_arm64=no])
 			    CFLAGS=$hold_cflags])
-			AS_IF([test $tcl_cv_cc_arch_arm64e = yes], [
-			    CFLAGS="$CFLAGS -arch arm64e"
+			AS_IF([test $tcl_cv_cc_arch_arm64 = yes], [
+			    CFLAGS="$CFLAGS -arch arm64"
 			    do64bit_ok=yes
 			]);;
 		    *)
@@ -1558,7 +1558,7 @@ AC_DEFUN([SC_CONFIG_CFLAGS], [
 		esac
 	    ], [
 		# Check for combined 32-bit and 64-bit fat build
-		AS_IF([echo "$CFLAGS " |grep -E -q -- '-arch (ppc64|x86_64|arm64e) ' \
+		AS_IF([echo "$CFLAGS " |grep -E -q -- '-arch (ppc64|x86_64|arm64) ' \
 		    && echo "$CFLAGS " |grep -E -q -- '-arch (ppc|i386) '], [
 		    fat_32_64=yes])
 	    ])
-- 
2.41.0
